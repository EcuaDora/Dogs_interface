# –ü–ª–æ—Ö–∞—è —è—á–µ–π–∫–∞
def get_bad_cell_error_string(cell_number, row_number, cell_type):
    return f"Cell {cell_number} in row {row_number} could not be converted to {str(cell_type)}"

# –ü–ª–æ—Ö–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ
bad_extension_error_string = "File has illegal extension"


# –î–æ–±–æ–≤–ª—è–µ–º–æ–µ –ª–µ–∫–∞—Ä—Å—Ç–≤–æ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
drug_already_exist_error_string = "This drug is already added!"

# –§–∞–π–ª–∞ –Ω–µ—Ç—É
file_doesnt_exist_error_string = "Such file doesnt exist"


# –ü—É—Å—Ç–æ–π —Ñ–∞–π–ª
empty_file_error_string = "File is empty"
# –ü—Ä–∏–≤–µ—Ç –∏ –∫—É –≤—Å–µ–º!


# –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —è—á–µ–µ–∫ –≤ —Å—Ç—Ä–æ–∫–µ
def get_wrong_cells_amount_error_string(row_number):
    return f"Wrong amount of cells in string {row_number}"


# –§–∞–π–ª —Å –Ω–µ–ø–æ–¥—Ö–æ–¥—è—â–∏–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º
def file_name_wrong_format(file_path, drug_name):
    return (
        f"File {file_path} doesnt match template: {drug_name}_<group_name>_<number>.csv"
    )

# –£ –ª–µ–∫–∞—Ä—Å—Ç–≤–∞ –Ω–µ—Ç—É –∫–æ–Ω—Ç—Ä–æ–ª—å–Ω–æ–π –≥—Ä—É–ø–ø—ã
def drug_doesnt_have_control_group(drug):
    return f"Drug {drug} doesnt have control group"


# –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–ª–æ–Ω–æ–∫ –≤–æ –≤—Å–µ–º —Ñ–∞–π–ª–µ (–¥–æ–ø—É—Å—Ç–º–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ - 2 –∏–ª–∏ 3)
wrong_columns_amount_error_string = "Wrong amount of columns in file"


# –ù–µ –≤—ã–±—Ä–∞–Ω–æ –ª–µ–∫–∞—Ä—Å—Ç–≤–æ
no_chosen_drug = "Add drug first!"

# –ù–µ –≤—ã–±—Ä–∞–Ω —Ç–∏–ø –∞–Ω–∞–ª–∏–∑–∞
analysis_type_is_not_chosen = "Choose analysis type!"


## –î–æ–±–æ–≤–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–∞

# –§–∞–π–ª —É–∂–µ –¥–æ–±–∞–≤–ª–µ–Ω
file_already_added_error_string = "File is already added"

# –§–∞–π–ª –¥–æ–±–∞–≤–ª–µ–Ω (–≤—Å–µ –Ω–æ—Ä–º)
file_added_success_string = "File is added"


## –í—Å—è–∫–æ–µ –¥—Ä—É–≥–æ–µ

# –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
greeting_message_string = """ Woof - Woof! üê∂
"""


# –°—Ç—Ä–æ–∫–∞ —Å –≤—ã–±—Ä–∞–Ω—ã–º–∏ —Ñ–∞–π–ª–∞–º–∏
def get_chosen_files_label(files):
  #  print(files)
    files_amount = 0
    for group_files in files.values():
        files_amount += len(group_files)
    return f"SELECTED FILES: ({files_amount})"


# –õ–µ–∫–∞—Ä—Å—Ç–≤–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω–æ
drug_added_success_string = "Drug is added"


# –§–∞–π–ª —É–¥–∞–¥–µ–Ω
def get_group_deletion_success_string(group_name):
    return f"Group {group_name} is removed"


def get_file_deletion_success_string(file_path):
    if len(file_path) > 40:
        truncated_file_name = file_path[-40:]
        return f"File ...{truncated_file_name} is removed"
    else:
        return f"File {file_path} is removed"


files_added_success_string = "File(s) are added"


no_files_error_string = "Add some files first"

def get_analysis_type_is_chosen_success_string(analysis_type):
    return f"Analysis type {analysis_type} is chosen"


def get_analysis_started_string(analysis_type):
    return f"Analysis {analysis_type} started, please wait"
